PROGRAM -> int main ( ) { STATEMENT_LANGUAGE }
STATEMENT_LANGUAGE -> STATEMENT STATEMENT_LANGUAGE
STATEMENT_LANGUAGE -> nil
STATEMENT -> DECLARATION_STATEMENT
STATEMENT -> ASSIGNMENT_STATEMENT
STATEMENT -> IF_STATEMENT
STATEMENT -> WHILE_STATEMENT
STATEMENT -> DO_WHILE_STATEMENT
STATEMENT -> FOR_STATEMENT

TYPE -> float
TYPE -> int
TYPE -> char
TYPE -> double
TYPE -> bool

OPTIONAL_POINTER_OPERATOR -> *
OPTIONAL_POINTER_OPERATOR -> nil

DECLARATION_STATEMENT -> TYPE OPTIONAL_POINTER_OPERATOR identifier DECLARATION_STATEMENT2
DECLARATION_STATEMENT2 -> ;
DECLARATION_STATEMENT2 -> , OPTIONAL_POINTER_OPERATOR identifier DECLARATION_STATEMENT2
DECLARATION_STATEMENT2 -> = number DECLARATION_STATEMENT2
DECLARATION_STATEMENT2 -> [ DECLARATION_STATEMENT3

DECLARATION_STATEMENT3 -> number ] DECLARATION_STATEMENT2

DECLARATION_STATEMENT3 -> ] = { number DECLARATION_STATEMENT4
DECLARATION_STATEMENT4 -> , number DECLARATION_STATEMENT4
DECLARATION_STATEMENT4 -> } DECLARATION_STATEMENT2

MATH_EXPRESSION -> MATH_TERM MATH_EXPRESSION2

MATH_EXPRESSION2 -> + MATH_TERM MATH_EXPRESSION2
MATH_EXPRESSION2 -> - MATH_TERM MATH_EXPRESSION2
MATH_EXPRESSION2 -> nil

MATH_TERM -> MATH_FACTOR MATH_TERM2
MATH_TERM2 -> * MATH_FACTOR MATH_TERM2 
MATH_TERM2 -> / MATH_FACTOR MATH_TERM2 
MATH_TERM2 -> nil

MATH_FACTOR -> identifier OPTIONAL_ARRAY_INDEX
MATH_FACTOR -> ( MATH_EXPRESSION )
MATH_FACTOR -> number
MATH_FACTOR -> - MATH_FACTOR
OPTIONAL_ARRAY_INDEX -> [ MATH_EXPRESSION ]
OPTIONAL_ARRAY_INDEX -> nil

COMPARISON_OPERATOR -> ==
COMPARISON_OPERATOR -> !=
COMPARISON_OPERATOR -> <=
COMPARISON_OPERATOR -> >=
COMPARISON_OPERATOR -> <
COMPARISON_OPERATOR -> >

BOOLEAN_EXPRESSION -> BOOLEAN_TERM BOOLEAN_EXPRESSION2
BOOLEAN_EXPRESSION2 -> or BOOLEAN_TERM BOOLEAN_EXPRESSION2
BOOLEAN_EXPRESSION2 -> nil

BOOLEAN_TERM -> BOOLEAN_FACTOR BOOLEAN_TERM2
BOOLEAN_TERM2 -> and BOOLEAN_FACTOR BOOLEAN_TERM2
BOOLEAN_TERM2 -> nil

#BOOLEAN_FACTOR -> identifier
#BOOLEAN_FACTOR -> ( BOOLEAN_EXPRESSION )
BOOLEAN_FACTOR -> not BOOLEAN_FACTOR
BOOLEAN_FACTOR -> MATH_EXPRESSION BOOLEAN_FACTOR2
BOOLEAN_FACTOR2 -> COMPARISON_OPERATOR MATH_EXPRESSION
BOOLEAN_FACTOR2 -> nil

IF_STATEMENT -> if ( BOOLEAN_EXPRESSION ) { STATEMENT_LANGUAGE } ELSE_STATEMENT
ELSE_STATEMENT -> nil
ELSE_STATEMENT -> else { STATEMENT_LANGUAGE }

WHILE_STATEMENT -> while ( BOOLEAN_EXPRESSION ) { LOOP_STATEMENT_LANGUAGE }
DO_WHILE_STATEMENT -> do { LOOP_STATEMENT_LANGUAGE } while ( BOOLEAN_EXPRESSION )
FOR_STATEMENT -> for ( SIMPLE_ASSIGNMENT_STATEMENT ; BOOLEAN_EXPRESSION ; ICREAMENT_DECREAMENT_STATEMENT ) { LOOP_STATEMENT_LANGUAGE }

SIMPLE_ASSIGNMENT_STATEMENT -> identifier = number
SIMPLE_ASSIGNMENT_STATEMENT -> TYPE identifier = number
ICREAMENT_DECREAMENT_STATEMENT -> PLUS_PLUS_OR_MINUS_MINUS identifier
ICREAMENT_DECREAMENT_STATEMENT -> identifier PLUS_PLUS_OR_MINUS_MINUS
PLUS_PLUS_OR_MINUS_MINUS -> ++
PLUS_PLUS_OR_MINUS_MINUS -> --

ASSIGNMENT_OPERATOR -> =
ASSIGNMENT_OPERATOR -> +=
ASSIGNMENT_OPERATOR -> -=
ASSIGNMENT_OPERATOR -> *=
ASSIGNMENT_OPERATOR -> /=

ASSIGNMENT_STATEMENT -> identifier ASSIGNMENT_OPERATOR MATH_EXPRESSION ASSIGNMENT_STATEMENT2
ASSIGNMENT_STATEMENT2 -> ;
ASSIGNMENT_STATEMENT2 -> COMPARISON_OPERATOR MATH_EXPRESSION ;

LOOP_STATEMENT_LANGUAGE -> LOOP_STATEMENT LOOP_STATEMENT_LANGUAGE
LOOP_STATEMENT_LANGUAGE -> nil
LOOP_STATEMENT -> break ;
LOOP_STATEMENT -> continue ;
LOOP_STATEMENT -> STATEMENT
